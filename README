USAGE:
  # Build both the compiler and pstack:
  make

  # Compile fib.cmm, producing fib.apm:
  ./compiler fib.cmm fib.apm

  # Disassemble fib.apm:
  ./pstack/apd fib
  # Execute fib.apm:
  ./pstack/api fib

BUILT-IN-FUNCTIONS:
  The cmm standard library contains three functions:

  exit()      : ends the program immediately
  puts("...") : prints a string (only literal strings are supported)
  putn(num)   : prints an integer (like printf("\t%d\n", num))
  getnum()    : gets a number from stdin

Note that function calls are not checked for number and type of
arguments: giving the wrong number is likely to smash the stack.
All functions return a value.

Functions with multiple arguments are not parsed correctly.

Features implemented include:
getnum()
if and if-else
simple for loop
global variables

Features NOT implemented include:
optimization
scoped for loop
function argument count checking
doubles and type checking

NOTE TO PROFESSOR: This project was done together by David Jones
and Ian Gibson. The work was divided evenly. David wrote SIf and
SFor, Ian wrote getnum() and SIfElse. The implementation of global
variables was a joint effort. The decisions and construction of
the grammar were decided upon together.
